<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="27" skipped="0" tests="33" time="7.593" timestamp="2025-06-02T18:10:40.831078+09:00" hostname="osakatatsuhikonoMac-mini.local"><testcase classname="tests.test_routers_corrected.TestArticleRouterCorrected" name="test_get_all_articles_success" time="0.296"><failure message="assert 401 == 200&#10; +  where 401 = &lt;Response [401 Unauthorized]&gt;.status_code&#10; +  and   200 = status.HTTP_200_OK">tests/test_routers_corrected.py:135: in test_get_all_articles_success
    assert response.status_code == status.HTTP_200_OK
E   assert 401 == 200
E    +  where 401 = &lt;Response [401 Unauthorized]&gt;.status_code
E    +  and   200 = status.HTTP_200_OK</failure></testcase><testcase classname="tests.test_routers_corrected.TestArticleRouterCorrected" name="test_get_article_by_id_success" time="0.324"><failure message="assert 404 == 200&#10; +  where 404 = &lt;Response [404 Not Found]&gt;.status_code&#10; +  and   200 = status.HTTP_200_OK">tests/test_routers_corrected.py:152: in test_get_article_by_id_success
    assert response.status_code == status.HTTP_200_OK
E   assert 404 == 200
E    +  where 404 = &lt;Response [404 Not Found]&gt;.status_code
E    +  and   200 = status.HTTP_200_OK</failure></testcase><testcase classname="tests.test_routers_corrected.TestArticleRouterCorrected" name="test_create_article_success" time="0.309"><failure message="assert 401 == 201&#10; +  where 401 = &lt;Response [401 Unauthorized]&gt;.status_code&#10; +  and   201 = status.HTTP_201_CREATED">tests/test_routers_corrected.py:170: in test_create_article_success
    assert response.status_code == status.HTTP_201_CREATED
E   assert 401 == 201
E    +  where 401 = &lt;Response [401 Unauthorized]&gt;.status_code
E    +  and   201 = status.HTTP_201_CREATED</failure></testcase><testcase classname="tests.test_routers_corrected.TestArticleRouterCorrected" name="test_update_article_success" time="0.270"><failure message="assert 401 == 202&#10; +  where 401 = &lt;Response [401 Unauthorized]&gt;.status_code&#10; +  and   202 = status.HTTP_202_ACCEPTED">tests/test_routers_corrected.py:195: in test_update_article_success
    assert response.status_code == status.HTTP_202_ACCEPTED
E   assert 401 == 202
E    +  where 401 = &lt;Response [401 Unauthorized]&gt;.status_code
E    +  and   202 = status.HTTP_202_ACCEPTED</failure></testcase><testcase classname="tests.test_routers_corrected.TestArticleRouterCorrected" name="test_delete_article_success" time="0.250"><failure message="TypeError: TestClient.delete() got an unexpected keyword argument 'json'">tests/test_routers_corrected.py:209: in test_delete_article_success
    response = client.delete(
E   TypeError: TestClient.delete() got an unexpected keyword argument 'json'</failure></testcase><testcase classname="tests.test_routers_corrected.TestArticleRouterCorrected" name="test_get_public_articles" time="0.019" /><testcase classname="tests.test_routers_corrected.TestArticleRouterCorrected" name="test_search_public_articles" time="0.007"><failure message="assert 422 == 200&#10; +  where 422 = &lt;Response [422 Unprocessable Entity]&gt;.status_code&#10; +  and   200 = status.HTTP_200_OK">tests/test_routers_corrected.py:248: in test_search_public_articles
    assert response.status_code == status.HTTP_200_OK
E   assert 422 == 200
E    +  where 422 = &lt;Response [422 Unprocessable Entity]&gt;.status_code
E    +  and   200 = status.HTTP_200_OK</failure></testcase><testcase classname="tests.test_routers_corrected.TestArticleRouterCorrected" name="test_get_public_article_by_id" time="0.012"><failure message="assert 404 == 200&#10; +  where 404 = &lt;Response [404 Not Found]&gt;.status_code&#10; +  and   200 = status.HTTP_200_OK">tests/test_routers_corrected.py:261: in test_get_public_article_by_id
    assert response.status_code == status.HTTP_200_OK
E   assert 404 == 200
E    +  where 404 = &lt;Response [404 Not Found]&gt;.status_code
E    +  and   200 = status.HTTP_200_OK</failure></testcase><testcase classname="tests.test_routers_corrected.TestAuthRouterCorrected" name="test_login_success" time="0.313"><failure message="assert 404 == 200&#10; +  where 404 = &lt;Response [404 Not Found]&gt;.status_code&#10; +  and   200 = status.HTTP_200_OK">tests/test_routers_corrected.py:289: in test_login_success
    assert response.status_code == status.HTTP_200_OK
E   assert 404 == 200
E    +  where 404 = &lt;Response [404 Not Found]&gt;.status_code
E    +  and   200 = status.HTTP_200_OK</failure></testcase><testcase classname="tests.test_routers_corrected.TestAuthRouterCorrected" name="test_login_invalid_credentials" time="0.013" /><testcase classname="tests.test_routers_corrected.TestAuthRouterCorrected" name="test_logout_success" time="0.003" /><testcase classname="tests.test_routers_corrected.TestAuthRouterCorrected" name="test_change_password_success" time="0.296"><failure message="assert 422 == 200&#10; +  where 422 = &lt;Response [422 Unprocessable Entity]&gt;.status_code&#10; +  and   200 = status.HTTP_200_OK">tests/test_routers_corrected.py:346: in test_change_password_success
    assert response.status_code == status.HTTP_200_OK
E   assert 422 == 200
E    +  where 422 = &lt;Response [422 Unprocessable Entity]&gt;.status_code
E    +  and   200 = status.HTTP_200_OK</failure></testcase><testcase classname="tests.test_routers_corrected.TestAuthRouterCorrected" name="test_get_article_success" time="0.272"><failure message="AttributeError: &lt;module 'routers.auth' from '/Users/tatu/Documents/GitHub/blog-api-main/routers/auth.py'&gt; does not have the attribute 'get_current_user'">tests/test_routers_corrected.py:351: in test_get_article_success
    with patch('routers.auth.get_current_user', return_value=mock_user):
/opt/homebrew/Cellar/python@3.11/3.11.11/Frameworks/Python.framework/Versions/3.11/lib/python3.11/unittest/mock.py:1446: in __enter__
    original, local = self.get_original()
/opt/homebrew/Cellar/python@3.11/3.11.11/Frameworks/Python.framework/Versions/3.11/lib/python3.11/unittest/mock.py:1419: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'routers.auth' from '/Users/tatu/Documents/GitHub/blog-api-main/routers/auth.py'&gt; does not have the attribute 'get_current_user'</failure></testcase><testcase classname="tests.test_routers_corrected.TestUserRouterCorrected" name="test_create_user_success" time="0.034"><failure message="assert 500 == 201&#10; +  where 500 = &lt;Response [500 Internal Server Error]&gt;.status_code&#10; +  and   201 = status.HTTP_201_CREATED">tests/test_routers_corrected.py:392: in test_create_user_success
    assert response.status_code == status.HTTP_201_CREATED
E   assert 500 == 201
E    +  where 500 = &lt;Response [500 Internal Server Error]&gt;.status_code
E    +  and   201 = status.HTTP_201_CREATED</failure></testcase><testcase classname="tests.test_routers_corrected.TestUserRouterCorrected" name="test_verify_email_success" time="0.303"><failure message="sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such column: email_verifications.password_hash&#10;[SQL: SELECT email_verifications.id AS email_verifications_id, email_verifications.email AS email_verifications_email, email_verifications.token AS email_verifications_token, email_verifications.password_hash AS email_verifications_password_hash, email_verifications.is_verified AS email_verifications_is_verified, email_verifications.created_at AS email_verifications_created_at, email_verifications.expires_at AS email_verifications_expires_at &#10;FROM email_verifications &#10;WHERE email_verifications.token = ?&#10; LIMIT ? OFFSET ?]&#10;[parameters: ('test_verification_token', 1, 0)]&#10;(Background on this error at: https://sqlalche.me/e/20/e3q8)">.venv/lib/python3.11/site-packages/sqlalchemy/engine/base.py:1964: in _exec_single_context
    self.dialect.do_execute(
.venv/lib/python3.11/site-packages/sqlalchemy/engine/default.py:945: in do_execute
    cursor.execute(statement, parameters)
E   sqlite3.OperationalError: no such column: email_verifications.password_hash

The above exception was the direct cause of the following exception:
tests/test_routers_corrected.py:408: in test_verify_email_success
    response = client.get(
.venv/lib/python3.11/site-packages/starlette/testclient.py:465: in get
    return super().get(
.venv/lib/python3.11/site-packages/httpx/_client.py:1053: in get
    return self.request(
.venv/lib/python3.11/site-packages/starlette/testclient.py:437: in request
    return super().request(
.venv/lib/python3.11/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
.venv/lib/python3.11/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
.venv/lib/python3.11/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
.venv/lib/python3.11/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
.venv/lib/python3.11/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
.venv/lib/python3.11/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
.venv/lib/python3.11/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
.venv/lib/python3.11/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/opt/homebrew/Cellar/python@3.11/3.11.11/Frameworks/Python.framework/Versions/3.11/lib/python3.11/concurrent/futures/_base.py:456: in result
    return self.__get_result()
/opt/homebrew/Cellar/python@3.11/3.11.11/Frameworks/Python.framework/Versions/3.11/lib/python3.11/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
.venv/lib/python3.11/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
.venv/lib/python3.11/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
.venv/lib/python3.11/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
.venv/lib/python3.11/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
.venv/lib/python3.11/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
.venv/lib/python3.11/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
.venv/lib/python3.11/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
.venv/lib/python3.11/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
.venv/lib/python3.11/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
.venv/lib/python3.11/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
.venv/lib/python3.11/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
.venv/lib/python3.11/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
.venv/lib/python3.11/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
.venv/lib/python3.11/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
.venv/lib/python3.11/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
.venv/lib/python3.11/site-packages/starlette/routing.py:73: in app
    response = await f(request)
.venv/lib/python3.11/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
.venv/lib/python3.11/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
routers/user.py:230: in verify_email
    ).first()
.venv/lib/python3.11/site-packages/sqlalchemy/orm/query.py:2759: in first
    return self.limit(1)._iter().first()  # type: ignore
.venv/lib/python3.11/site-packages/sqlalchemy/orm/query.py:2858: in _iter
    result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(
.venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
.venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
.venv/lib/python3.11/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
.venv/lib/python3.11/site-packages/sqlalchemy/engine/base.py:1416: in execute
    return meth(
.venv/lib/python3.11/site-packages/sqlalchemy/sql/elements.py:523: in _execute_on_connection
    return connection._execute_clauseelement(
.venv/lib/python3.11/site-packages/sqlalchemy/engine/base.py:1638: in _execute_clauseelement
    ret = self._execute_context(
.venv/lib/python3.11/site-packages/sqlalchemy/engine/base.py:1843: in _execute_context
    return self._exec_single_context(
.venv/lib/python3.11/site-packages/sqlalchemy/engine/base.py:1983: in _exec_single_context
    self._handle_dbapi_exception(
.venv/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2352: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
.venv/lib/python3.11/site-packages/sqlalchemy/engine/base.py:1964: in _exec_single_context
    self.dialect.do_execute(
.venv/lib/python3.11/site-packages/sqlalchemy/engine/default.py:945: in do_execute
    cursor.execute(statement, parameters)
E   sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such column: email_verifications.password_hash
E   [SQL: SELECT email_verifications.id AS email_verifications_id, email_verifications.email AS email_verifications_email, email_verifications.token AS email_verifications_token, email_verifications.password_hash AS email_verifications_password_hash, email_verifications.is_verified AS email_verifications_is_verified, email_verifications.created_at AS email_verifications_created_at, email_verifications.expires_at AS email_verifications_expires_at 
E   FROM email_verifications 
E   WHERE email_verifications.token = ?
E    LIMIT ? OFFSET ?]
E   [parameters: ('test_verification_token', 1, 0)]
E   (Background on this error at: https://sqlalche.me/e/20/e3q8)</failure></testcase><testcase classname="tests.test_routers_corrected.TestUserRouterCorrected" name="test_get_user_success" time="0.285"><failure message="assert 401 == 200&#10; +  where 401 = &lt;Response [401 Unauthorized]&gt;.status_code&#10; +  and   200 = status.HTTP_200_OK">tests/test_routers_corrected.py:430: in test_get_user_success
    assert response.status_code == status.HTTP_200_OK
E   assert 401 == 200
E    +  where 401 = &lt;Response [401 Unauthorized]&gt;.status_code
E    +  and   200 = status.HTTP_200_OK</failure></testcase><testcase classname="tests.test_routers_corrected.TestUserRouterCorrected" name="test_resend_verification_success" time="0.278"><failure message="assert 400 == 200&#10; +  where 400 = &lt;Response [400 Bad Request]&gt;.status_code&#10; +  and   200 = status.HTTP_200_OK">tests/test_routers_corrected.py:451: in test_resend_verification_success
    assert response.status_code == status.HTTP_200_OK
E   assert 400 == 200
E    +  where 400 = &lt;Response [400 Bad Request]&gt;.status_code
E    +  and   200 = status.HTTP_200_OK</failure></testcase><testcase classname="tests.test_routers_corrected.TestUserRouterCorrected" name="test_delete_user_account_success" time="0.347"><failure message="TypeError: TestClient.delete() got an unexpected keyword argument 'json'">tests/test_routers_corrected.py:472: in test_delete_user_account_success
    response = client.delete(
E   TypeError: TestClient.delete() got an unexpected keyword argument 'json'</failure></testcase><testcase classname="tests.test_routers_corrected.TestRoutersErrorHandling" name="test_unauthorized_access" time="0.026" /><testcase classname="tests.test_routers_corrected.TestRoutersErrorHandling" name="test_invalid_article_id" time="0.334" /><testcase classname="tests.test_routers_corrected.TestRoutersErrorHandling" name="test_invalid_user_id" time="0.330"><failure message="assert 401 == 404&#10; +  where 401 = &lt;Response [401 Unauthorized]&gt;.status_code&#10; +  and   404 = status.HTTP_404_NOT_FOUND">tests/test_routers_corrected.py:527: in test_invalid_user_id
    assert response.status_code == status.HTTP_404_NOT_FOUND
E   assert 401 == 404
E    +  where 401 = &lt;Response [401 Unauthorized]&gt;.status_code
E    +  and   404 = status.HTTP_404_NOT_FOUND</failure></testcase><testcase classname="tests.test_routers_corrected.TestRoutersErrorHandling" name="test_duplicate_user_creation" time="0.312"><failure message="assert 500 == 400&#10; +  where 500 = &lt;Response [500 Internal Server Error]&gt;.status_code&#10; +  and   400 = status.HTTP_400_BAD_REQUEST">tests/test_routers_corrected.py:548: in test_duplicate_user_creation
    assert response.status_code == status.HTTP_400_BAD_REQUEST
E   assert 500 == 400
E    +  where 500 = &lt;Response [500 Internal Server Error]&gt;.status_code
E    +  and   400 = status.HTTP_400_BAD_REQUEST</failure></testcase><testcase classname="tests.test_routers_corrected.TestRoutersValidation" name="test_invalid_email_format" time="0.007"><failure message="assert 400 == 422&#10; +  where 400 = &lt;Response [400 Bad Request]&gt;.status_code&#10; +  and   422 = status.HTTP_422_UNPROCESSABLE_ENTITY">tests/test_routers_corrected.py:567: in test_invalid_email_format
    assert response.status_code == status.HTTP_422_UNPROCESSABLE_ENTITY
E   assert 400 == 422
E    +  where 400 = &lt;Response [400 Bad Request]&gt;.status_code
E    +  and   422 = status.HTTP_422_UNPROCESSABLE_ENTITY</failure></testcase><testcase classname="tests.test_routers_corrected.TestRoutersValidation" name="test_weak_password" time="0.007"><failure message="assert 500 == 422&#10; +  where 500 = &lt;Response [500 Internal Server Error]&gt;.status_code&#10; +  and   422 = status.HTTP_422_UNPROCESSABLE_ENTITY">tests/test_routers_corrected.py:581: in test_weak_password
    assert response.status_code == status.HTTP_422_UNPROCESSABLE_ENTITY
E   assert 500 == 422
E    +  where 500 = &lt;Response [500 Internal Server Error]&gt;.status_code
E    +  and   422 = status.HTTP_422_UNPROCESSABLE_ENTITY</failure></testcase><testcase classname="tests.test_routers_corrected.TestRoutersValidation" name="test_empty_article_title" time="0.292"><failure message="assert 401 == 422&#10; +  where 401 = &lt;Response [401 Unauthorized]&gt;.status_code&#10; +  and   422 = status.HTTP_422_UNPROCESSABLE_ENTITY">tests/test_routers_corrected.py:599: in test_empty_article_title
    assert response.status_code == status.HTTP_422_UNPROCESSABLE_ENTITY
E   assert 401 == 422
E    +  where 401 = &lt;Response [401 Unauthorized]&gt;.status_code
E    +  and   422 = status.HTTP_422_UNPROCESSABLE_ENTITY</failure></testcase><testcase classname="tests.test_routers_corrected.TestRoutersValidation" name="test_missing_required_fields" time="0.008"><failure message="assert 400 == 422&#10; +  where 400 = &lt;Response [400 Bad Request]&gt;.status_code&#10; +  and   422 = status.HTTP_422_UNPROCESSABLE_ENTITY">tests/test_routers_corrected.py:611: in test_missing_required_fields
    assert response.status_code == status.HTTP_422_UNPROCESSABLE_ENTITY
E   assert 400 == 422
E    +  where 400 = &lt;Response [400 Bad Request]&gt;.status_code
E    +  and   422 = status.HTTP_422_UNPROCESSABLE_ENTITY</failure></testcase><testcase classname="tests.test_routers_corrected.TestRoutersPerformance" name="test_article_list_performance" time="0.257"><failure message="assert 401 == 200&#10; +  where 401 = &lt;Response [401 Unauthorized]&gt;.status_code&#10; +  and   200 = status.HTTP_200_OK">tests/test_routers_corrected.py:639: in test_article_list_performance
    assert response.status_code == status.HTTP_200_OK
E   assert 401 == 200
E    +  where 401 = &lt;Response [401 Unauthorized]&gt;.status_code
E    +  and   200 = status.HTTP_200_OK</failure></testcase><testcase classname="tests.test_routers_corrected.TestRoutersPerformance" name="test_concurrent_login_requests" time="0.273"><failure message="assert 404 == 200&#10; +  where 404 = &lt;Response [404 Not Found]&gt;.status_code&#10; +  and   200 = status.HTTP_200_OK">tests/test_routers_corrected.py:666: in test_concurrent_login_requests
    assert response.status_code == status.HTTP_200_OK
E   assert 404 == 200
E    +  where 404 = &lt;Response [404 Not Found]&gt;.status_code
E    +  and   200 = status.HTTP_200_OK</failure></testcase><testcase classname="tests.test_routers_corrected.TestRoutersSecurity" name="test_sql_injection_protection" time="0.003"><failure message="assert 422 in [200, 400]&#10; +  where 422 = &lt;Response [422 Unprocessable Entity]&gt;.status_code">tests/test_routers_corrected.py:693: in test_sql_injection_protection
    assert response.status_code in [status.HTTP_200_OK, status.HTTP_400_BAD_REQUEST]
E   assert 422 in [200, 400]
E    +  where 422 = &lt;Response [422 Unprocessable Entity]&gt;.status_code</failure></testcase><testcase classname="tests.test_routers_corrected.TestRoutersSecurity" name="test_xss_protection" time="0.244"><failure message="assert 401 in [201, 400, 422]&#10; +  where 401 = &lt;Response [401 Unauthorized]&gt;.status_code">tests/test_routers_corrected.py:714: in test_xss_protection
    assert response.status_code in [
E   assert 401 in [201, 400, 422]
E    +  where 401 = &lt;Response [401 Unauthorized]&gt;.status_code</failure></testcase><testcase classname="tests.test_routers_corrected.TestRoutersSecurity" name="test_rate_limiting_simulation" time="0.263"><failure message="assert 0 &gt;= 5">tests/test_routers_corrected.py:743: in test_rate_limiting_simulation
    assert success_count &gt;= 5  # At least half should succeed
E   assert 0 &gt;= 5</failure></testcase><testcase classname="tests.test_routers_corrected.TestRoutersSecurity" name="test_authentication_token_validation" time="0.003" /><testcase classname="tests.test_routers_corrected.TestRoutersIntegration" name="test_complete_user_article_workflow" time="0.005"><failure message="assert 500 == 201&#10; +  where 500 = &lt;Response [500 Internal Server Error]&gt;.status_code&#10; +  and   201 = status.HTTP_201_CREATED">tests/test_routers_corrected.py:810: in test_complete_user_article_workflow
    assert response.status_code == status.HTTP_201_CREATED
E   assert 500 == 201
E    +  where 500 = &lt;Response [500 Internal Server Error]&gt;.status_code
E    +  and   201 = status.HTTP_201_CREATED</failure></testcase></testsuite></testsuites>
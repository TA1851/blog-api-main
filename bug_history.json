[
  {
    "timestamp": "2025-06-05T20:26:21.200981",
    "test_id": "20250605_202621",
    "test_name": "test_database",
    "total_tests": 15,
    "passed": 15,
    "failed": 0,
    "errors": 0,
    "skipped": 0,
    "success_rate": 100.0,
    "execution_time": 1.422,
    "failed_tests": []
  },
  {
    "timestamp": "2025-06-05T20:26:34.094189",
    "test_id": "20250605_202634",
    "test_name": "test_models",
    "total_tests": 26,
    "passed": 26,
    "failed": 0,
    "errors": 0,
    "skipped": 0,
    "success_rate": 100.0,
    "execution_time": 1.465,
    "failed_tests": []
  },
  {
    "timestamp": "2025-06-05T20:30:39.926437",
    "test_id": "20250605_203039",
    "test_name": "test_hashing",
    "total_tests": 44,
    "passed": 44,
    "failed": 0,
    "errors": 0,
    "skipped": 0,
    "success_rate": 100.0,
    "execution_time": 44.29,
    "failed_tests": []
  },
  {
    "timestamp": "2025-06-05T20:35:02.128807",
    "test_id": "20250605_203502",
    "test_name": "test_models",
    "total_tests": 12,
    "passed": 12,
    "failed": 0,
    "errors": 0,
    "skipped": 0,
    "success_rate": 100.0,
    "execution_time": 1.336,
    "failed_tests": []
  },
  {
    "timestamp": "2025-06-05T20:36:28.119373",
    "test_id": "20250605_203628",
    "test_name": "test_oauth2",
    "total_tests": 0,
    "passed": 0,
    "failed": 0,
    "errors": 0,
    "skipped": 0,
    "success_rate": 0,
    "execution_time": 1.068,
    "failed_tests": []
  },
  {
    "timestamp": "2025-06-05T20:40:46.757153",
    "test_id": "20250605_204046",
    "test_name": "test_oauth2",
    "total_tests": 13,
    "passed": 12,
    "failed": 1,
    "errors": 0,
    "skipped": 0,
    "success_rate": 92.3076923076923,
    "execution_time": 1.201,
    "failed_tests": [
      {
        "name": "test_oauth2_scheme_configuration",
        "classname": "tests.test_oauth2.TestOAuth2Module",
        "time": 0.0,
        "status": "failed",
        "failure_message": "AttributeError: 'OAuth2PasswordBearer' object has no attribute 'tokenUrl'",
        "failure_text": "tests/test_oauth2.py:158: in test_oauth2_scheme_configuration\n    assert oauth2_scheme.tokenUrl == \"api/v1/login\"\nE   AttributeError: 'OAuth2PasswordBearer' object has no attribute 'tokenUrl'"
      }
    ]
  },
  {
    "timestamp": "2025-06-05T20:41:22.122533",
    "test_id": "20250605_204122",
    "test_name": "test_oauth2",
    "total_tests": 13,
    "passed": 13,
    "failed": 0,
    "errors": 0,
    "skipped": 0,
    "success_rate": 100.0,
    "execution_time": 1.111,
    "failed_tests": []
  },
  {
    "timestamp": "2025-06-05T20:41:39.463775",
    "test_id": "20250605_204139",
    "test_name": "test_schemas",
    "total_tests": 0,
    "passed": 0,
    "failed": 0,
    "errors": 0,
    "skipped": 0,
    "success_rate": 0,
    "execution_time": 0.901,
    "failed_tests": []
  },
  {
    "timestamp": "2025-06-05T20:43:05.892858",
    "test_id": "20250605_204305",
    "test_name": "test_schemas",
    "total_tests": 34,
    "passed": 32,
    "failed": 2,
    "errors": 0,
    "skipped": 0,
    "success_rate": 94.11764705882352,
    "execution_time": 1.056,
    "failed_tests": [
      {
        "name": "test_validation_exception_handler",
        "classname": "tests.test_schemas.TestValidationExceptionHandler",
        "time": 0.002,
        "status": "failed",
        "failure_message": "AttributeError: <module 'schemas' from '/Users/tatu/Documents/GitHub/blog-api-main/schemas.py'> does not have the attribute 'request_validation_exception_handler'",
        "failure_text": "tests/test_schemas.py:401: in test_validation_exception_handler\n    with patch('schemas.request_validation_exception_handler') as mock_handler:\n/opt/homebrew/Cellar/python@3.11/3.11.11/Frameworks/Python.framework/Versions/3.11/lib/python3.11/unittest/mock.py:1446: in __enter__\n    original, local = self.get_original()\n/opt/homebrew/Cellar/python@3.11/3.11.11/Frameworks/Python.framework/Versions/3.11/lib/python3.11/unittest/mock.py:1419: in get_original\n    raise AttributeError(\nE   AttributeError: <module 'schemas' from '/Users/tatu/Documents/GitHub/blog-api-main/schemas.py'> does not have the attribute 'request_validation_exception_handler'"
      },
      {
        "name": "test_validation_exception_handler_different_error_formats",
        "classname": "tests.test_schemas.TestValidationExceptionHandler",
        "time": 0.002,
        "status": "failed",
        "failure_message": "AttributeError: <module 'schemas' from '/Users/tatu/Documents/GitHub/blog-api-main/schemas.py'> does not have the attribute 'request_validation_exception_handler'",
        "failure_text": "tests/test_schemas.py:426: in test_validation_exception_handler_different_error_formats\n    with patch('schemas.request_validation_exception_handler') as mock_handler:\n/opt/homebrew/Cellar/python@3.11/3.11.11/Frameworks/Python.framework/Versions/3.11/lib/python3.11/unittest/mock.py:1446: in __enter__\n    original, local = self.get_original()\n/opt/homebrew/Cellar/python@3.11/3.11.11/Frameworks/Python.framework/Versions/3.11/lib/python3.11/unittest/mock.py:1419: in get_original\n    raise AttributeError(\nE   AttributeError: <module 'schemas' from '/Users/tatu/Documents/GitHub/blog-api-main/schemas.py'> does not have the attribute 'request_validation_exception_handler'"
      }
    ]
  },
  {
    "timestamp": "2025-06-05T20:44:19.282040",
    "test_id": "20250605_204419",
    "test_name": "test_schemas",
    "total_tests": 34,
    "passed": 34,
    "failed": 0,
    "errors": 0,
    "skipped": 0,
    "success_rate": 100.0,
    "execution_time": 0.909,
    "failed_tests": []
  },
  {
    "timestamp": "2025-06-05T20:44:43.325242",
    "test_id": "20250605_204443",
    "test_name": "test_custom_token",
    "total_tests": 0,
    "passed": 0,
    "failed": 0,
    "errors": 0,
    "skipped": 0,
    "success_rate": 0,
    "execution_time": 0.631,
    "failed_tests": []
  },
  {
    "timestamp": "2025-06-05T20:46:25.601901",
    "test_id": "20250605_204625",
    "test_name": "test_custom_token",
    "total_tests": 21,
    "passed": 21,
    "failed": 0,
    "errors": 0,
    "skipped": 0,
    "success_rate": 100.0,
    "execution_time": 1.847,
    "failed_tests": []
  },
  {
    "timestamp": "2025-06-05T20:48:10.958533",
    "test_id": "20250605_204810",
    "test_name": "test_exceptions",
    "total_tests": 26,
    "passed": 26,
    "failed": 0,
    "errors": 0,
    "skipped": 0,
    "success_rate": 100.0,
    "execution_time": 0.653,
    "failed_tests": []
  },
  {
    "timestamp": "2025-06-05T20:48:23.543720",
    "test_id": "20250605_204823",
    "test_name": "test_main",
    "total_tests": 0,
    "passed": 0,
    "failed": 0,
    "errors": 0,
    "skipped": 0,
    "success_rate": 0,
    "execution_time": 0.802,
    "failed_tests": []
  },
  {
    "timestamp": "2025-06-05T20:49:38.527365",
    "test_id": "20250605_204938",
    "test_name": "test_main",
    "total_tests": 12,
    "passed": 9,
    "failed": 3,
    "errors": 0,
    "skipped": 0,
    "success_rate": 75.0,
    "execution_time": 2.208,
    "failed_tests": [
      {
        "name": "test_cors_origins_from_env",
        "classname": "tests.test_main.TestMainAppConfiguration",
        "time": 0.022,
        "status": "failed",
        "failure_message": "AssertionError: Expected 'create_logger' to have been called.",
        "failure_text": "tests/test_main.py:47: in test_cors_origins_from_env\n    mock_logger.assert_called()\n/opt/homebrew/Cellar/python@3.11/3.11.11/Frameworks/Python.framework/Versions/3.11/lib/python3.11/unittest/mock.py:908: in assert_called\n    raise AssertionError(msg)\nE   AssertionError: Expected 'create_logger' to have been called."
      },
      {
        "name": "test_cors_fallback_when_no_origins",
        "classname": "tests.test_main.TestMainAppConfiguration",
        "time": 0.015,
        "status": "failed",
        "failure_message": "AssertionError: Expected 'create_error_logger' to have been called.",
        "failure_text": "tests/test_main.py:70: in test_cors_fallback_when_no_origins\n    mock_error_logger.assert_called()\n/opt/homebrew/Cellar/python@3.11/3.11.11/Frameworks/Python.framework/Versions/3.11/lib/python3.11/unittest/mock.py:908: in assert_called\n    raise AssertionError(msg)\nE   AssertionError: Expected 'create_error_logger' to have been called."
      },
      {
        "name": "test_database_tables_creation",
        "classname": "tests.test_main.TestDatabaseInitialization",
        "time": 0.043,
        "status": "failed",
        "failure_message": "AssertionError: expected call not found.\nExpected: create_all(<MagicMock name='engine' id='4420157840'>)\n  Actual: not called.",
        "failure_text": "tests/test_main.py:315: in test_database_tables_creation\n    mock_base.metadata.create_all.assert_called_with(mock_engine)\n/opt/homebrew/Cellar/python@3.11/3.11.11/Frameworks/Python.framework/Versions/3.11/lib/python3.11/unittest/mock.py:930: in assert_called_with\n    raise AssertionError(error_message)\nE   AssertionError: expected call not found.\nE   Expected: create_all(<MagicMock name='engine' id='4420157840'>)\nE     Actual: not called."
      }
    ]
  },
  {
    "timestamp": "2025-06-05T20:50:38.555571",
    "test_id": "20250605_205038",
    "test_name": "test_main",
    "total_tests": 12,
    "passed": 9,
    "failed": 3,
    "errors": 0,
    "skipped": 0,
    "success_rate": 75.0,
    "execution_time": 1.654,
    "failed_tests": [
      {
        "name": "test_cors_origins_from_env",
        "classname": "tests.test_main.TestMainAppConfiguration",
        "time": 0.013,
        "status": "failed",
        "failure_message": "AssertionError: expected call not found.\nExpected: create_logger('CORS_ORIGIN -> OK')\n  Actual: not called.",
        "failure_text": "tests/test_main.py:47: in test_cors_origins_from_env\n    mock_logger.assert_called_with(f\"CORS_ORIGIN -> OK\")\n/opt/homebrew/Cellar/python@3.11/3.11.11/Frameworks/Python.framework/Versions/3.11/lib/python3.11/unittest/mock.py:930: in assert_called_with\n    raise AssertionError(error_message)\nE   AssertionError: expected call not found.\nE   Expected: create_logger('CORS_ORIGIN -> OK')\nE     Actual: not called."
      },
      {
        "name": "test_cors_fallback_when_no_origins",
        "classname": "tests.test_main.TestMainAppConfiguration",
        "time": 0.013,
        "status": "failed",
        "failure_message": "AssertionError: expected call not found.\nExpected: create_error_logger('CORS_ORIGINSとLOCAL_ORIGINの両方が取得できませんでした。')\n  Actual: not called.",
        "failure_text": "tests/test_main.py:68: in test_cors_fallback_when_no_origins\n    mock_error_logger.assert_called_with(\"CORS_ORIGINSとLOCAL_ORIGINの両方が取得できませんでした。\")\n/opt/homebrew/Cellar/python@3.11/3.11.11/Frameworks/Python.framework/Versions/3.11/lib/python3.11/unittest/mock.py:930: in assert_called_with\n    raise AssertionError(error_message)\nE   AssertionError: expected call not found.\nE   Expected: create_error_logger('CORS_ORIGINSとLOCAL_ORIGINの両方が取得できませんでした。')\nE     Actual: not called."
      },
      {
        "name": "test_database_tables_creation",
        "classname": "tests.test_main.TestDatabaseInitialization",
        "time": 0.031,
        "status": "failed",
        "failure_message": "AssertionError: expected call not found.\nExpected: create_all(<MagicMock name='engine' id='4421317264'>)\n  Actual: not called.",
        "failure_text": "tests/test_main.py:317: in test_database_tables_creation\n    mock_metadata.create_all.assert_called_with(mock_engine)\n/opt/homebrew/Cellar/python@3.11/3.11.11/Frameworks/Python.framework/Versions/3.11/lib/python3.11/unittest/mock.py:930: in assert_called_with\n    raise AssertionError(error_message)\nE   AssertionError: expected call not found.\nE   Expected: create_all(<MagicMock name='engine' id='4421317264'>)\nE     Actual: not called."
      }
    ]
  },
  {
    "timestamp": "2025-06-05T20:53:31.997268",
    "test_id": "20250605_205331",
    "test_name": "test_main",
    "total_tests": 12,
    "passed": 9,
    "failed": 3,
    "errors": 0,
    "skipped": 0,
    "success_rate": 75.0,
    "execution_time": 1.727,
    "failed_tests": [
      {
        "name": "test_cors_origins_from_env",
        "classname": "tests.test_main.TestMainAppConfiguration",
        "time": 0.013,
        "status": "failed",
        "failure_message": "AssertionError: create_logger('CORS_ORIGIN -> OK') call not found",
        "failure_text": "tests/test_main.py:52: in test_cors_origins_from_env\n    mock_logger.assert_any_call(\"CORS_ORIGIN -> OK\")\n/opt/homebrew/Cellar/python@3.11/3.11.11/Frameworks/Python.framework/Versions/3.11/lib/python3.11/unittest/mock.py:1010: in assert_any_call\n    raise AssertionError(\nE   AssertionError: create_logger('CORS_ORIGIN -> OK') call not found"
      },
      {
        "name": "test_cors_fallback_when_no_origins",
        "classname": "tests.test_main.TestMainAppConfiguration",
        "time": 0.016,
        "status": "failed",
        "failure_message": "AssertionError: create_logger('CORS_ORIGIN -> OK') call not found",
        "failure_text": "tests/test_main.py:72: in test_cors_fallback_when_no_origins\n    mock_logger.assert_any_call(\"CORS_ORIGIN -> OK\")\n/opt/homebrew/Cellar/python@3.11/3.11.11/Frameworks/Python.framework/Versions/3.11/lib/python3.11/unittest/mock.py:1010: in assert_any_call\n    raise AssertionError(\nE   AssertionError: create_logger('CORS_ORIGIN -> OK') call not found"
      },
      {
        "name": "test_database_tables_creation",
        "classname": "tests.test_main.TestDatabaseInitialization",
        "time": 0.016,
        "status": "failed",
        "failure_message": "AssertionError: expected call not found.\nExpected: create_all(<MagicMock name='engine' id='4418210960'>)\n  Actual: create_all(Engine(sqlite:///blog.db))",
        "failure_text": "tests/test_main.py:313: in test_database_tables_creation\n    mock_create_all.assert_called_with(mock_engine)\n/opt/homebrew/Cellar/python@3.11/3.11.11/Frameworks/Python.framework/Versions/3.11/lib/python3.11/unittest/mock.py:939: in assert_called_with\n    raise AssertionError(_error_message()) from cause\nE   AssertionError: expected call not found.\nE   Expected: create_all(<MagicMock name='engine' id='4418210960'>)\nE     Actual: create_all(Engine(sqlite:///blog.db))"
      }
    ]
  },
  {
    "timestamp": "2025-06-05T20:53:50.500028",
    "test_id": "20250605_205350",
    "test_name": "test_auth_router",
    "total_tests": 0,
    "passed": 0,
    "failed": 0,
    "errors": 0,
    "skipped": 0,
    "success_rate": 0,
    "execution_time": 0.811,
    "failed_tests": []
  },
  {
    "timestamp": "2025-06-05T20:56:15.248505",
    "test_id": "20250605_205615",
    "test_name": "test_auth_router",
    "total_tests": 10,
    "passed": 10,
    "failed": 0,
    "errors": 0,
    "skipped": 0,
    "success_rate": 100.0,
    "execution_time": 1.385,
    "failed_tests": []
  },
  {
    "timestamp": "2025-06-05T20:58:11.121439",
    "test_id": "20250605_205811",
    "test_name": "test_article_router",
    "total_tests": 11,
    "passed": 11,
    "failed": 0,
    "errors": 0,
    "skipped": 0,
    "success_rate": 100.0,
    "execution_time": 2.032,
    "failed_tests": []
  },
  {
    "timestamp": "2025-06-05T20:59:56.761635",
    "test_id": "20250605_205956",
    "test_name": "test_test_user_router",
    "total_tests": 0,
    "passed": 0,
    "failed": 0,
    "errors": 0,
    "skipped": 0,
    "success_rate": 0,
    "execution_time": 0.01,
    "failed_tests": []
  },
  {
    "timestamp": "2025-06-05T21:00:05.863127",
    "test_id": "20250605_210005",
    "test_name": "test_test_user_router",
    "total_tests": 0,
    "passed": 0,
    "failed": 0,
    "errors": 0,
    "skipped": 0,
    "success_rate": 0,
    "execution_time": 0.011,
    "failed_tests": []
  },
  {
    "timestamp": "2025-06-05T21:00:59.209433",
    "test_id": "20250605_210059",
    "test_name": "test_user_router",
    "total_tests": 44,
    "passed": 38,
    "failed": 6,
    "errors": 0,
    "skipped": 0,
    "success_rate": 86.36363636363636,
    "execution_time": 1.79,
    "failed_tests": [
      {
        "name": "test_delete_user_account_user_not_found",
        "classname": "tests.test_user_router.TestDeleteUserAccountEndpoint",
        "time": 0.025,
        "status": "failed",
        "failure_message": "AssertionError: assert 500 == 404\n +  where 500 = HTTPException(status_code=500, detail='\\u9000\\u4f1a\\u51e6\\u7406\\u4e2d\\u306b\\u4e88\\u671f\\u3057\\u306a\\u3044\\u30a8\\u30e9\\u30fc\\u304c\\u767a\\u751f\\u3057\\u307e\\u3057\\u305f').status_code\n +    where HTTPException(status_code=500, detail='\\u9000\\u4f1a\\u51e6\\u7406\\u4e2d\\u306b\\u4e88\\u671f\\u3057\\u306a\\u3044\\u30a8\\u30e9\\u30fc\\u304c\\u767a\\u751f\\u3057\\u307e\\u3057\\u305f') = <ExceptionInfo HTTPException(status_code=500, detail='\\u9000\\u4f1a\\u51e6\\u7406\\u4e2d\\u306b\\u4e88\\u671f\\u3057\\u306a\\u3044\\u30a8\\u30e9\\u30fc\\u304c\\u767a\\u751f\\u3057\\u307e\\u3057\\u305f') tblen=5>.value\n +  and   404 = status.HTTP_404_NOT_FOUND",
        "failure_text": "tests/test_user_router.py:480: in test_delete_user_account_user_not_found\n    assert exc_info.value.status_code == status.HTTP_404_NOT_FOUND\nE   AssertionError: assert 500 == 404\nE    +  where 500 = HTTPException(status_code=500, detail='\\u9000\\u4f1a\\u51e6\\u7406\\u4e2d\\u306b\\u4e88\\u671f\\u3057\\u306a\\u3044\\u30a8\\u30e9\\u30fc\\u304c\\u767a\\u751f\\u3057\\u307e\\u3057\\u305f').status_code\nE    +    where HTTPException(status_code=500, detail='\\u9000\\u4f1a\\u51e6\\u7406\\u4e2d\\u306b\\u4e88\\u671f\\u3057\\u306a\\u3044\\u30a8\\u30e9\\u30fc\\u304c\\u767a\\u751f\\u3057\\u307e\\u3057\\u305f') = <ExceptionInfo HTTPException(status_code=500, detail='\\u9000\\u4f1a\\u51e6\\u7406\\u4e2d\\u306b\\u4e88\\u671f\\u3057\\u306a\\u3044\\u30a8\\u30e9\\u30fc\\u304c\\u767a\\u751f\\u3057\\u307e\\u3057\\u305f') tblen=5>.value\nE    +  and   404 = status.HTTP_404_NOT_FOUND"
      },
      {
        "name": "test_delete_user_account_no_password_set",
        "classname": "tests.test_user_router.TestDeleteUserAccountEndpoint",
        "time": 0.003,
        "status": "failed",
        "failure_message": "AssertionError: assert 500 == 400\n +  where 500 = HTTPException(status_code=500, detail='\\u9000\\u4f1a\\u51e6\\u7406\\u4e2d\\u306b\\u4e88\\u671f\\u3057\\u306a\\u3044\\u30a8\\u30e9\\u30fc\\u304c\\u767a\\u751f\\u3057\\u307e\\u3057\\u305f').status_code\n +    where HTTPException(status_code=500, detail='\\u9000\\u4f1a\\u51e6\\u7406\\u4e2d\\u306b\\u4e88\\u671f\\u3057\\u306a\\u3044\\u30a8\\u30e9\\u30fc\\u304c\\u767a\\u751f\\u3057\\u307e\\u3057\\u305f') = <ExceptionInfo HTTPException(status_code=500, detail='\\u9000\\u4f1a\\u51e6\\u7406\\u4e2d\\u306b\\u4e88\\u671f\\u3057\\u306a\\u3044\\u30a8\\u30e9\\u30fc\\u304c\\u767a\\u751f\\u3057\\u307e\\u3057\\u305f') tblen=5>.value\n +  and   400 = status.HTTP_400_BAD_REQUEST",
        "failure_text": "tests/test_user_router.py:492: in test_delete_user_account_no_password_set\n    assert exc_info.value.status_code == status.HTTP_400_BAD_REQUEST\nE   AssertionError: assert 500 == 400\nE    +  where 500 = HTTPException(status_code=500, detail='\\u9000\\u4f1a\\u51e6\\u7406\\u4e2d\\u306b\\u4e88\\u671f\\u3057\\u306a\\u3044\\u30a8\\u30e9\\u30fc\\u304c\\u767a\\u751f\\u3057\\u307e\\u3057\\u305f').status_code\nE    +    where HTTPException(status_code=500, detail='\\u9000\\u4f1a\\u51e6\\u7406\\u4e2d\\u306b\\u4e88\\u671f\\u3057\\u306a\\u3044\\u30a8\\u30e9\\u30fc\\u304c\\u767a\\u751f\\u3057\\u307e\\u3057\\u305f') = <ExceptionInfo HTTPException(status_code=500, detail='\\u9000\\u4f1a\\u51e6\\u7406\\u4e2d\\u306b\\u4e88\\u671f\\u3057\\u306a\\u3044\\u30a8\\u30e9\\u30fc\\u304c\\u767a\\u751f\\u3057\\u307e\\u3057\\u305f') tblen=5>.value\nE    +  and   400 = status.HTTP_400_BAD_REQUEST"
      },
      {
        "name": "test_delete_user_account_wrong_password",
        "classname": "tests.test_user_router.TestDeleteUserAccountEndpoint",
        "time": 0.003,
        "status": "failed",
        "failure_message": "AssertionError: assert 500 == 401\n +  where 500 = HTTPException(status_code=500, detail='\\u9000\\u4f1a\\u51e6\\u7406\\u4e2d\\u306b\\u4e88\\u671f\\u3057\\u306a\\u3044\\u30a8\\u30e9\\u30fc\\u304c\\u767a\\u751f\\u3057\\u307e\\u3057\\u305f').status_code\n +    where HTTPException(status_code=500, detail='\\u9000\\u4f1a\\u51e6\\u7406\\u4e2d\\u306b\\u4e88\\u671f\\u3057\\u306a\\u3044\\u30a8\\u30e9\\u30fc\\u304c\\u767a\\u751f\\u3057\\u307e\\u3057\\u305f') = <ExceptionInfo HTTPException(status_code=500, detail='\\u9000\\u4f1a\\u51e6\\u7406\\u4e2d\\u306b\\u4e88\\u671f\\u3057\\u306a\\u3044\\u30a8\\u30e9\\u30fc\\u304c\\u767a\\u751f\\u3057\\u307e\\u3057\\u305f') tblen=5>.value\n +  and   401 = status.HTTP_401_UNAUTHORIZED",
        "failure_text": "tests/test_user_router.py:508: in test_delete_user_account_wrong_password\n    assert exc_info.value.status_code == status.HTTP_401_UNAUTHORIZED\nE   AssertionError: assert 500 == 401\nE    +  where 500 = HTTPException(status_code=500, detail='\\u9000\\u4f1a\\u51e6\\u7406\\u4e2d\\u306b\\u4e88\\u671f\\u3057\\u306a\\u3044\\u30a8\\u30e9\\u30fc\\u304c\\u767a\\u751f\\u3057\\u307e\\u3057\\u305f').status_code\nE    +    where HTTPException(status_code=500, detail='\\u9000\\u4f1a\\u51e6\\u7406\\u4e2d\\u306b\\u4e88\\u671f\\u3057\\u306a\\u3044\\u30a8\\u30e9\\u30fc\\u304c\\u767a\\u751f\\u3057\\u307e\\u3057\\u305f') = <ExceptionInfo HTTPException(status_code=500, detail='\\u9000\\u4f1a\\u51e6\\u7406\\u4e2d\\u306b\\u4e88\\u671f\\u3057\\u306a\\u3044\\u30a8\\u30e9\\u30fc\\u304c\\u767a\\u751f\\u3057\\u307e\\u3057\\u305f') tblen=5>.value\nE    +  and   401 = status.HTTP_401_UNAUTHORIZED"
      },
      {
        "name": "test_delete_user_account_no_email",
        "classname": "tests.test_user_router.TestDeleteUserAccountEndpoint",
        "time": 0.003,
        "status": "failed",
        "failure_message": "AssertionError: assert 500 == 400\n +  where 500 = HTTPException(status_code=500, detail='\\u9000\\u4f1a\\u51e6\\u7406\\u4e2d\\u306b\\u4e88\\u671f\\u3057\\u306a\\u3044\\u30a8\\u30e9\\u30fc\\u304c\\u767a\\u751f\\u3057\\u307e\\u3057\\u305f').status_code\n +    where HTTPException(status_code=500, detail='\\u9000\\u4f1a\\u51e6\\u7406\\u4e2d\\u306b\\u4e88\\u671f\\u3057\\u306a\\u3044\\u30a8\\u30e9\\u30fc\\u304c\\u767a\\u751f\\u3057\\u307e\\u3057\\u305f') = <ExceptionInfo HTTPException(status_code=500, detail='\\u9000\\u4f1a\\u51e6\\u7406\\u4e2d\\u306b\\u4e88\\u671f\\u3057\\u306a\\u3044\\u30a8\\u30e9\\u30fc\\u304c\\u767a\\u751f\\u3057\\u307e\\u3057\\u305f') tblen=5>.value\n +  and   400 = status.HTTP_400_BAD_REQUEST",
        "failure_text": "tests/test_user_router.py:524: in test_delete_user_account_no_email\n    assert exc_info.value.status_code == status.HTTP_400_BAD_REQUEST\nE   AssertionError: assert 500 == 400\nE    +  where 500 = HTTPException(status_code=500, detail='\\u9000\\u4f1a\\u51e6\\u7406\\u4e2d\\u306b\\u4e88\\u671f\\u3057\\u306a\\u3044\\u30a8\\u30e9\\u30fc\\u304c\\u767a\\u751f\\u3057\\u307e\\u3057\\u305f').status_code\nE    +    where HTTPException(status_code=500, detail='\\u9000\\u4f1a\\u51e6\\u7406\\u4e2d\\u306b\\u4e88\\u671f\\u3057\\u306a\\u3044\\u30a8\\u30e9\\u30fc\\u304c\\u767a\\u751f\\u3057\\u307e\\u3057\\u305f') = <ExceptionInfo HTTPException(status_code=500, detail='\\u9000\\u4f1a\\u51e6\\u7406\\u4e2d\\u306b\\u4e88\\u671f\\u3057\\u306a\\u3044\\u30a8\\u30e9\\u30fc\\u304c\\u767a\\u751f\\u3057\\u307e\\u3057\\u305f') tblen=5>.value\nE    +  and   400 = status.HTTP_400_BAD_REQUEST"
      },
      {
        "name": "test_delete_user_account_success",
        "classname": "tests.test_user_router.TestDeleteUserAccountEndpoint",
        "time": 0.006,
        "status": "failed",
        "failure_message": "fastapi.exceptions.HTTPException: 500: 退会処理中に予期しないエラーが発生しました",
        "failure_text": "routers/user.py:466: in delete_user_account\n    認証ユーザー: {current_user.email}\"\nE   AttributeError: 'Depends' object has no attribute 'email'\n\nDuring handling of the above exception, another exception occurred:\ntests/test_user_router.py:562: in test_delete_user_account_success\n    result = asyncio.run(delete_user_account(valid_deletion_request, mock_db))\n/opt/homebrew/Cellar/python@3.11/3.11.11/Frameworks/Python.framework/Versions/3.11/lib/python3.11/asyncio/runners.py:190: in run\n    return runner.run(main)\n/opt/homebrew/Cellar/python@3.11/3.11.11/Frameworks/Python.framework/Versions/3.11/lib/python3.11/asyncio/runners.py:118: in run\n    return self._loop.run_until_complete(task)\n/opt/homebrew/Cellar/python@3.11/3.11.11/Frameworks/Python.framework/Versions/3.11/lib/python3.11/asyncio/base_events.py:654: in run_until_complete\n    return future.result()\nrouters/user.py:569: in delete_user_account\n    raise HTTPException(\nE   fastapi.exceptions.HTTPException: 500: 退会処理中に予期しないエラーが発生しました"
      },
      {
        "name": "test_delete_user_account_password_mismatch",
        "classname": "tests.test_user_router.TestDeleteUserAccountEndpoint",
        "time": 0.003,
        "status": "failed",
        "failure_message": "AssertionError: assert 500 == 400\n +  where 500 = HTTPException(status_code=500, detail='\\u9000\\u4f1a\\u51e6\\u7406\\u4e2d\\u306b\\u4e88\\u671f\\u3057\\u306a\\u3044\\u30a8\\u30e9\\u30fc\\u304c\\u767a\\u751f\\u3057\\u307e\\u3057\\u305f').status_code\n +    where HTTPException(status_code=500, detail='\\u9000\\u4f1a\\u51e6\\u7406\\u4e2d\\u306b\\u4e88\\u671f\\u3057\\u306a\\u3044\\u30a8\\u30e9\\u30fc\\u304c\\u767a\\u751f\\u3057\\u307e\\u3057\\u305f') = <ExceptionInfo HTTPException(status_code=500, detail='\\u9000\\u4f1a\\u51e6\\u7406\\u4e2d\\u306b\\u4e88\\u671f\\u3057\\u306a\\u3044\\u30a8\\u30e9\\u30fc\\u304c\\u767a\\u751f\\u3057\\u307e\\u3057\\u305f') tblen=5>.value\n +  and   400 = status.HTTP_400_BAD_REQUEST",
        "failure_text": "tests/test_user_router.py:583: in test_delete_user_account_password_mismatch\n    assert exc_info.value.status_code == status.HTTP_400_BAD_REQUEST\nE   AssertionError: assert 500 == 400\nE    +  where 500 = HTTPException(status_code=500, detail='\\u9000\\u4f1a\\u51e6\\u7406\\u4e2d\\u306b\\u4e88\\u671f\\u3057\\u306a\\u3044\\u30a8\\u30e9\\u30fc\\u304c\\u767a\\u751f\\u3057\\u307e\\u3057\\u305f').status_code\nE    +    where HTTPException(status_code=500, detail='\\u9000\\u4f1a\\u51e6\\u7406\\u4e2d\\u306b\\u4e88\\u671f\\u3057\\u306a\\u3044\\u30a8\\u30e9\\u30fc\\u304c\\u767a\\u751f\\u3057\\u307e\\u3057\\u305f') = <ExceptionInfo HTTPException(status_code=500, detail='\\u9000\\u4f1a\\u51e6\\u7406\\u4e2d\\u306b\\u4e88\\u671f\\u3057\\u306a\\u3044\\u30a8\\u30e9\\u30fc\\u304c\\u767a\\u751f\\u3057\\u307e\\u3057\\u305f') tblen=5>.value\nE    +  and   400 = status.HTTP_400_BAD_REQUEST"
      }
    ]
  },
  {
    "timestamp": "2025-06-05T21:02:28.580137",
    "test_id": "20250605_210228",
    "test_name": "test_user_router",
    "total_tests": 44,
    "passed": 38,
    "failed": 6,
    "errors": 0,
    "skipped": 0,
    "success_rate": 86.36363636363636,
    "execution_time": 1.713,
    "failed_tests": [
      {
        "name": "test_delete_user_account_user_not_found",
        "classname": "tests.test_user_router.TestDeleteUserAccountEndpoint",
        "time": 0.003,
        "status": "failed",
        "failure_message": "AssertionError: assert 500 == 404\n +  where 500 = HTTPException(status_code=500, detail='\\u9000\\u4f1a\\u51e6\\u7406\\u4e2d\\u306b\\u4e88\\u671f\\u3057\\u306a\\u3044\\u30a8\\u30e9\\u30fc\\u304c\\u767a\\u751f\\u3057\\u307e\\u3057\\u305f').status_code\n +    where HTTPException(status_code=500, detail='\\u9000\\u4f1a\\u51e6\\u7406\\u4e2d\\u306b\\u4e88\\u671f\\u3057\\u306a\\u3044\\u30a8\\u30e9\\u30fc\\u304c\\u767a\\u751f\\u3057\\u307e\\u3057\\u305f') = <ExceptionInfo HTTPException(status_code=500, detail='\\u9000\\u4f1a\\u51e6\\u7406\\u4e2d\\u306b\\u4e88\\u671f\\u3057\\u306a\\u3044\\u30a8\\u30e9\\u30fc\\u304c\\u767a\\u751f\\u3057\\u307e\\u3057\\u305f') tblen=5>.value\n +  and   404 = status.HTTP_404_NOT_FOUND",
        "failure_text": "tests/test_user_router.py:480: in test_delete_user_account_user_not_found\n    assert exc_info.value.status_code == status.HTTP_404_NOT_FOUND\nE   AssertionError: assert 500 == 404\nE    +  where 500 = HTTPException(status_code=500, detail='\\u9000\\u4f1a\\u51e6\\u7406\\u4e2d\\u306b\\u4e88\\u671f\\u3057\\u306a\\u3044\\u30a8\\u30e9\\u30fc\\u304c\\u767a\\u751f\\u3057\\u307e\\u3057\\u305f').status_code\nE    +    where HTTPException(status_code=500, detail='\\u9000\\u4f1a\\u51e6\\u7406\\u4e2d\\u306b\\u4e88\\u671f\\u3057\\u306a\\u3044\\u30a8\\u30e9\\u30fc\\u304c\\u767a\\u751f\\u3057\\u307e\\u3057\\u305f') = <ExceptionInfo HTTPException(status_code=500, detail='\\u9000\\u4f1a\\u51e6\\u7406\\u4e2d\\u306b\\u4e88\\u671f\\u3057\\u306a\\u3044\\u30a8\\u30e9\\u30fc\\u304c\\u767a\\u751f\\u3057\\u307e\\u3057\\u305f') tblen=5>.value\nE    +  and   404 = status.HTTP_404_NOT_FOUND"
      },
      {
        "name": "test_delete_user_account_no_password_set",
        "classname": "tests.test_user_router.TestDeleteUserAccountEndpoint",
        "time": 0.004,
        "status": "failed",
        "failure_message": "AssertionError: assert 500 == 400\n +  where 500 = HTTPException(status_code=500, detail='\\u9000\\u4f1a\\u51e6\\u7406\\u4e2d\\u306b\\u4e88\\u671f\\u3057\\u306a\\u3044\\u30a8\\u30e9\\u30fc\\u304c\\u767a\\u751f\\u3057\\u307e\\u3057\\u305f').status_code\n +    where HTTPException(status_code=500, detail='\\u9000\\u4f1a\\u51e6\\u7406\\u4e2d\\u306b\\u4e88\\u671f\\u3057\\u306a\\u3044\\u30a8\\u30e9\\u30fc\\u304c\\u767a\\u751f\\u3057\\u307e\\u3057\\u305f') = <ExceptionInfo HTTPException(status_code=500, detail='\\u9000\\u4f1a\\u51e6\\u7406\\u4e2d\\u306b\\u4e88\\u671f\\u3057\\u306a\\u3044\\u30a8\\u30e9\\u30fc\\u304c\\u767a\\u751f\\u3057\\u307e\\u3057\\u305f') tblen=5>.value\n +  and   400 = status.HTTP_400_BAD_REQUEST",
        "failure_text": "tests/test_user_router.py:492: in test_delete_user_account_no_password_set\n    assert exc_info.value.status_code == status.HTTP_400_BAD_REQUEST\nE   AssertionError: assert 500 == 400\nE    +  where 500 = HTTPException(status_code=500, detail='\\u9000\\u4f1a\\u51e6\\u7406\\u4e2d\\u306b\\u4e88\\u671f\\u3057\\u306a\\u3044\\u30a8\\u30e9\\u30fc\\u304c\\u767a\\u751f\\u3057\\u307e\\u3057\\u305f').status_code\nE    +    where HTTPException(status_code=500, detail='\\u9000\\u4f1a\\u51e6\\u7406\\u4e2d\\u306b\\u4e88\\u671f\\u3057\\u306a\\u3044\\u30a8\\u30e9\\u30fc\\u304c\\u767a\\u751f\\u3057\\u307e\\u3057\\u305f') = <ExceptionInfo HTTPException(status_code=500, detail='\\u9000\\u4f1a\\u51e6\\u7406\\u4e2d\\u306b\\u4e88\\u671f\\u3057\\u306a\\u3044\\u30a8\\u30e9\\u30fc\\u304c\\u767a\\u751f\\u3057\\u307e\\u3057\\u305f') tblen=5>.value\nE    +  and   400 = status.HTTP_400_BAD_REQUEST"
      },
      {
        "name": "test_delete_user_account_wrong_password",
        "classname": "tests.test_user_router.TestDeleteUserAccountEndpoint",
        "time": 0.003,
        "status": "failed",
        "failure_message": "AssertionError: assert 500 == 401\n +  where 500 = HTTPException(status_code=500, detail='\\u9000\\u4f1a\\u51e6\\u7406\\u4e2d\\u306b\\u4e88\\u671f\\u3057\\u306a\\u3044\\u30a8\\u30e9\\u30fc\\u304c\\u767a\\u751f\\u3057\\u307e\\u3057\\u305f').status_code\n +    where HTTPException(status_code=500, detail='\\u9000\\u4f1a\\u51e6\\u7406\\u4e2d\\u306b\\u4e88\\u671f\\u3057\\u306a\\u3044\\u30a8\\u30e9\\u30fc\\u304c\\u767a\\u751f\\u3057\\u307e\\u3057\\u305f') = <ExceptionInfo HTTPException(status_code=500, detail='\\u9000\\u4f1a\\u51e6\\u7406\\u4e2d\\u306b\\u4e88\\u671f\\u3057\\u306a\\u3044\\u30a8\\u30e9\\u30fc\\u304c\\u767a\\u751f\\u3057\\u307e\\u3057\\u305f') tblen=5>.value\n +  and   401 = status.HTTP_401_UNAUTHORIZED",
        "failure_text": "tests/test_user_router.py:508: in test_delete_user_account_wrong_password\n    assert exc_info.value.status_code == status.HTTP_401_UNAUTHORIZED\nE   AssertionError: assert 500 == 401\nE    +  where 500 = HTTPException(status_code=500, detail='\\u9000\\u4f1a\\u51e6\\u7406\\u4e2d\\u306b\\u4e88\\u671f\\u3057\\u306a\\u3044\\u30a8\\u30e9\\u30fc\\u304c\\u767a\\u751f\\u3057\\u307e\\u3057\\u305f').status_code\nE    +    where HTTPException(status_code=500, detail='\\u9000\\u4f1a\\u51e6\\u7406\\u4e2d\\u306b\\u4e88\\u671f\\u3057\\u306a\\u3044\\u30a8\\u30e9\\u30fc\\u304c\\u767a\\u751f\\u3057\\u307e\\u3057\\u305f') = <ExceptionInfo HTTPException(status_code=500, detail='\\u9000\\u4f1a\\u51e6\\u7406\\u4e2d\\u306b\\u4e88\\u671f\\u3057\\u306a\\u3044\\u30a8\\u30e9\\u30fc\\u304c\\u767a\\u751f\\u3057\\u307e\\u3057\\u305f') tblen=5>.value\nE    +  and   401 = status.HTTP_401_UNAUTHORIZED"
      },
      {
        "name": "test_delete_user_account_no_email",
        "classname": "tests.test_user_router.TestDeleteUserAccountEndpoint",
        "time": 0.003,
        "status": "failed",
        "failure_message": "AssertionError: assert 500 == 400\n +  where 500 = HTTPException(status_code=500, detail='\\u9000\\u4f1a\\u51e6\\u7406\\u4e2d\\u306b\\u4e88\\u671f\\u3057\\u306a\\u3044\\u30a8\\u30e9\\u30fc\\u304c\\u767a\\u751f\\u3057\\u307e\\u3057\\u305f').status_code\n +    where HTTPException(status_code=500, detail='\\u9000\\u4f1a\\u51e6\\u7406\\u4e2d\\u306b\\u4e88\\u671f\\u3057\\u306a\\u3044\\u30a8\\u30e9\\u30fc\\u304c\\u767a\\u751f\\u3057\\u307e\\u3057\\u305f') = <ExceptionInfo HTTPException(status_code=500, detail='\\u9000\\u4f1a\\u51e6\\u7406\\u4e2d\\u306b\\u4e88\\u671f\\u3057\\u306a\\u3044\\u30a8\\u30e9\\u30fc\\u304c\\u767a\\u751f\\u3057\\u307e\\u3057\\u305f') tblen=5>.value\n +  and   400 = status.HTTP_400_BAD_REQUEST",
        "failure_text": "tests/test_user_router.py:524: in test_delete_user_account_no_email\n    assert exc_info.value.status_code == status.HTTP_400_BAD_REQUEST\nE   AssertionError: assert 500 == 400\nE    +  where 500 = HTTPException(status_code=500, detail='\\u9000\\u4f1a\\u51e6\\u7406\\u4e2d\\u306b\\u4e88\\u671f\\u3057\\u306a\\u3044\\u30a8\\u30e9\\u30fc\\u304c\\u767a\\u751f\\u3057\\u307e\\u3057\\u305f').status_code\nE    +    where HTTPException(status_code=500, detail='\\u9000\\u4f1a\\u51e6\\u7406\\u4e2d\\u306b\\u4e88\\u671f\\u3057\\u306a\\u3044\\u30a8\\u30e9\\u30fc\\u304c\\u767a\\u751f\\u3057\\u307e\\u3057\\u305f') = <ExceptionInfo HTTPException(status_code=500, detail='\\u9000\\u4f1a\\u51e6\\u7406\\u4e2d\\u306b\\u4e88\\u671f\\u3057\\u306a\\u3044\\u30a8\\u30e9\\u30fc\\u304c\\u767a\\u751f\\u3057\\u307e\\u3057\\u305f') tblen=5>.value\nE    +  and   400 = status.HTTP_400_BAD_REQUEST"
      },
      {
        "name": "test_delete_user_account_success",
        "classname": "tests.test_user_router.TestDeleteUserAccountEndpoint",
        "time": 0.006,
        "status": "failed",
        "failure_message": "fastapi.exceptions.HTTPException: 500: 退会処理中に予期しないエラーが発生しました",
        "failure_text": "routers/user.py:466: in delete_user_account\n    認証ユーザー: {current_user.email}\"\nE   AttributeError: 'Depends' object has no attribute 'email'\n\nDuring handling of the above exception, another exception occurred:\ntests/test_user_router.py:562: in test_delete_user_account_success\n    result = asyncio.run(delete_user_account(valid_deletion_request, mock_db))\n/opt/homebrew/Cellar/python@3.11/3.11.11/Frameworks/Python.framework/Versions/3.11/lib/python3.11/asyncio/runners.py:190: in run\n    return runner.run(main)\n/opt/homebrew/Cellar/python@3.11/3.11.11/Frameworks/Python.framework/Versions/3.11/lib/python3.11/asyncio/runners.py:118: in run\n    return self._loop.run_until_complete(task)\n/opt/homebrew/Cellar/python@3.11/3.11.11/Frameworks/Python.framework/Versions/3.11/lib/python3.11/asyncio/base_events.py:654: in run_until_complete\n    return future.result()\nrouters/user.py:569: in delete_user_account\n    raise HTTPException(\nE   fastapi.exceptions.HTTPException: 500: 退会処理中に予期しないエラーが発生しました"
      },
      {
        "name": "test_delete_user_account_password_mismatch",
        "classname": "tests.test_user_router.TestDeleteUserAccountEndpoint",
        "time": 0.003,
        "status": "failed",
        "failure_message": "AssertionError: assert 500 == 400\n +  where 500 = HTTPException(status_code=500, detail='\\u9000\\u4f1a\\u51e6\\u7406\\u4e2d\\u306b\\u4e88\\u671f\\u3057\\u306a\\u3044\\u30a8\\u30e9\\u30fc\\u304c\\u767a\\u751f\\u3057\\u307e\\u3057\\u305f').status_code\n +    where HTTPException(status_code=500, detail='\\u9000\\u4f1a\\u51e6\\u7406\\u4e2d\\u306b\\u4e88\\u671f\\u3057\\u306a\\u3044\\u30a8\\u30e9\\u30fc\\u304c\\u767a\\u751f\\u3057\\u307e\\u3057\\u305f') = <ExceptionInfo HTTPException(status_code=500, detail='\\u9000\\u4f1a\\u51e6\\u7406\\u4e2d\\u306b\\u4e88\\u671f\\u3057\\u306a\\u3044\\u30a8\\u30e9\\u30fc\\u304c\\u767a\\u751f\\u3057\\u307e\\u3057\\u305f') tblen=5>.value\n +  and   400 = status.HTTP_400_BAD_REQUEST",
        "failure_text": "tests/test_user_router.py:583: in test_delete_user_account_password_mismatch\n    assert exc_info.value.status_code == status.HTTP_400_BAD_REQUEST\nE   AssertionError: assert 500 == 400\nE    +  where 500 = HTTPException(status_code=500, detail='\\u9000\\u4f1a\\u51e6\\u7406\\u4e2d\\u306b\\u4e88\\u671f\\u3057\\u306a\\u3044\\u30a8\\u30e9\\u30fc\\u304c\\u767a\\u751f\\u3057\\u307e\\u3057\\u305f').status_code\nE    +    where HTTPException(status_code=500, detail='\\u9000\\u4f1a\\u51e6\\u7406\\u4e2d\\u306b\\u4e88\\u671f\\u3057\\u306a\\u3044\\u30a8\\u30e9\\u30fc\\u304c\\u767a\\u751f\\u3057\\u307e\\u3057\\u305f') = <ExceptionInfo HTTPException(status_code=500, detail='\\u9000\\u4f1a\\u51e6\\u7406\\u4e2d\\u306b\\u4e88\\u671f\\u3057\\u306a\\u3044\\u30a8\\u30e9\\u30fc\\u304c\\u767a\\u751f\\u3057\\u307e\\u3057\\u305f') tblen=5>.value\nE    +  and   400 = status.HTTP_400_BAD_REQUEST"
      }
    ]
  },
  {
    "timestamp": "2025-06-05T21:04:56.868260",
    "test_id": "20250605_210456",
    "test_name": "test_user_router",
    "total_tests": 44,
    "passed": 44,
    "failed": 0,
    "errors": 0,
    "skipped": 0,
    "success_rate": 100.0,
    "execution_time": 1.599,
    "failed_tests": []
  },
  {
    "timestamp": "2025-06-05T21:05:16.385952",
    "test_id": "20250605_210516",
    "test_name": "test_main",
    "total_tests": 12,
    "passed": 9,
    "failed": 3,
    "errors": 0,
    "skipped": 0,
    "success_rate": 75.0,
    "execution_time": 2.179,
    "failed_tests": [
      {
        "name": "test_cors_origins_from_env",
        "classname": "tests.test_main.TestMainAppConfiguration",
        "time": 0.015,
        "status": "failed",
        "failure_message": "AssertionError: create_logger('CORS_ORIGIN -> OK') call not found",
        "failure_text": "tests/test_main.py:52: in test_cors_origins_from_env\n    mock_logger.assert_any_call(\"CORS_ORIGIN -> OK\")\n/opt/homebrew/Cellar/python@3.11/3.11.11/Frameworks/Python.framework/Versions/3.11/lib/python3.11/unittest/mock.py:1010: in assert_any_call\n    raise AssertionError(\nE   AssertionError: create_logger('CORS_ORIGIN -> OK') call not found"
      },
      {
        "name": "test_cors_fallback_when_no_origins",
        "classname": "tests.test_main.TestMainAppConfiguration",
        "time": 0.014,
        "status": "failed",
        "failure_message": "AssertionError: create_logger('CORS_ORIGIN -> OK') call not found",
        "failure_text": "tests/test_main.py:72: in test_cors_fallback_when_no_origins\n    mock_logger.assert_any_call(\"CORS_ORIGIN -> OK\")\n/opt/homebrew/Cellar/python@3.11/3.11.11/Frameworks/Python.framework/Versions/3.11/lib/python3.11/unittest/mock.py:1010: in assert_any_call\n    raise AssertionError(\nE   AssertionError: create_logger('CORS_ORIGIN -> OK') call not found"
      },
      {
        "name": "test_database_tables_creation",
        "classname": "tests.test_main.TestDatabaseInitialization",
        "time": 0.014,
        "status": "failed",
        "failure_message": "AssertionError: expected call not found.\nExpected: create_all(<MagicMock name='engine' id='4640690192'>)\n  Actual: create_all(Engine(sqlite:///blog.db))",
        "failure_text": "tests/test_main.py:313: in test_database_tables_creation\n    mock_create_all.assert_called_with(mock_engine)\n/opt/homebrew/Cellar/python@3.11/3.11.11/Frameworks/Python.framework/Versions/3.11/lib/python3.11/unittest/mock.py:939: in assert_called_with\n    raise AssertionError(_error_message()) from cause\nE   AssertionError: expected call not found.\nE   Expected: create_all(<MagicMock name='engine' id='4640690192'>)\nE     Actual: create_all(Engine(sqlite:///blog.db))"
      }
    ]
  },
  {
    "timestamp": "2025-06-05T21:08:40.857072",
    "test_id": "20250605_210840",
    "test_name": "test_main",
    "total_tests": 12,
    "passed": 10,
    "failed": 2,
    "errors": 0,
    "skipped": 0,
    "success_rate": 83.33333333333334,
    "execution_time": 1.715,
    "failed_tests": [
      {
        "name": "test_cors_origins_from_env",
        "classname": "tests.test_main.TestMainAppConfiguration",
        "time": 0.013,
        "status": "failed",
        "failure_message": "AssertionError: assert 'https://test.com' in ['https://nextjs-app-khaki-two.vercel.app', 'http://localhost:3000', 'http://127.0.0.1:8000', 'https://example.com']",
        "failure_text": "tests/test_main.py:56: in test_cors_origins_from_env\n    assert \"https://test.com\" in allowed_origins\nE   AssertionError: assert 'https://test.com' in ['https://nextjs-app-khaki-two.vercel.app', 'http://localhost:3000', 'http://127.0.0.1:8000', 'https://example.com']"
      },
      {
        "name": "test_database_tables_creation",
        "classname": "tests.test_main.TestDatabaseInitialization",
        "time": 0.012,
        "status": "failed",
        "failure_message": "AssertionError: expected call not found.\nExpected: create_all(<MagicMock name='engine' id='4410989200'>)\n  Actual: create_all(Engine(sqlite:///blog.db))",
        "failure_text": "tests/test_main.py:322: in test_database_tables_creation\n    mock_create_all.assert_called_with(mock_engine)\n/opt/homebrew/Cellar/python@3.11/3.11.11/Frameworks/Python.framework/Versions/3.11/lib/python3.11/unittest/mock.py:939: in assert_called_with\n    raise AssertionError(_error_message()) from cause\nE   AssertionError: expected call not found.\nE   Expected: create_all(<MagicMock name='engine' id='4410989200'>)\nE     Actual: create_all(Engine(sqlite:///blog.db))"
      }
    ]
  },
  {
    "timestamp": "2025-06-05T21:09:55.224760",
    "test_id": "20250605_210955",
    "test_name": "test_main",
    "total_tests": 12,
    "passed": 12,
    "failed": 0,
    "errors": 0,
    "skipped": 0,
    "success_rate": 100.0,
    "execution_time": 2.07,
    "failed_tests": []
  },
  {
    "timestamp": "2025-06-05T21:11:28.004126",
    "test_id": "20250605_211128",
    "test_name": "test_custom_logger",
    "total_tests": 16,
    "passed": 15,
    "failed": 1,
    "errors": 0,
    "skipped": 0,
    "success_rate": 93.75,
    "execution_time": 0.962,
    "failed_tests": [
      {
        "name": "test_log_directory_creation",
        "classname": "tests.test_custom_logger.TestCustomLoggerConfiguration",
        "time": 0.005,
        "status": "failed",
        "failure_message": "AssertionError: Expected 'mkdir' to be called once. Called 0 times.",
        "failure_text": "tests/test_custom_logger.py:29: in test_log_directory_creation\n    mock_log_dir.mkdir.assert_called_once_with(parents=True, exist_ok=True)\n/opt/homebrew/Cellar/python@3.11/3.11.11/Frameworks/Python.framework/Versions/3.11/lib/python3.11/unittest/mock.py:950: in assert_called_once_with\n    raise AssertionError(msg)\nE   AssertionError: Expected 'mkdir' to be called once. Called 0 times."
      }
    ]
  },
  {
    "timestamp": "2025-06-05T21:12:09.078324",
    "test_id": "20250605_211209",
    "test_name": "test_custom_logger",
    "total_tests": 16,
    "passed": 16,
    "failed": 0,
    "errors": 0,
    "skipped": 0,
    "success_rate": 100.0,
    "execution_time": 0.732,
    "failed_tests": []
  },
  {
    "timestamp": "2025-06-05T21:13:37.335975",
    "test_id": "20250605_211337",
    "test_name": "test_email_sender",
    "total_tests": 0,
    "passed": 0,
    "failed": 0,
    "errors": 0,
    "skipped": 0,
    "success_rate": 0,
    "execution_time": 1.114,
    "failed_tests": []
  },
  {
    "timestamp": "2025-06-05T21:15:13.277969",
    "test_id": "20250605_211513",
    "test_name": "test_email_validator",
    "total_tests": 12,
    "passed": 12,
    "failed": 0,
    "errors": 0,
    "skipped": 0,
    "success_rate": 100.0,
    "execution_time": 1.366,
    "failed_tests": []
  },
  {
    "timestamp": "2025-06-05T21:16:18.549788",
    "test_id": "20250605_211618",
    "test_name": "test_email_sender",
    "total_tests": 19,
    "passed": 18,
    "failed": 1,
    "errors": 0,
    "skipped": 0,
    "success_rate": 94.73684210526315,
    "execution_time": 1.328,
    "failed_tests": [
      {
        "name": "test_get_mail_config_defaults",
        "classname": "tests.test_email_sender.TestEmailSenderConfiguration",
        "time": 0.003,
        "status": "failed",
        "failure_message": "pydantic_core._pydantic_core.ValidationError: 1 validation error for ConnectionConfig\nMAIL_FROM\n  value is not a valid email address: An email address must have an @-sign. [type=value_error, input_value='', input_type=str]",
        "failure_text": "tests/test_email_sender.py:46: in test_get_mail_config_defaults\n    config = get_mail_config()\nutils/email_sender.py:15: in get_mail_config\n    return ConnectionConfig(\n.venv/lib/python3.11/site-packages/pydantic_settings/main.py:176: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 1 validation error for ConnectionConfig\nE   MAIL_FROM\nE     value is not a valid email address: An email address must have an @-sign. [type=value_error, input_value='', input_type=str]"
      }
    ]
  },
  {
    "timestamp": "2025-06-05T21:17:35.971413",
    "test_id": "20250605_211735",
    "test_name": "test_email_sender",
    "total_tests": 19,
    "passed": 18,
    "failed": 1,
    "errors": 0,
    "skipped": 0,
    "success_rate": 94.73684210526315,
    "execution_time": 1.288,
    "failed_tests": [
      {
        "name": "test_get_mail_config_defaults",
        "classname": "tests.test_email_sender.TestEmailSenderConfiguration",
        "time": 0.001,
        "status": "failed",
        "failure_message": "ValueError: invalid literal for int() with base 10: ''",
        "failure_text": "tests/test_email_sender.py:52: in test_get_mail_config_defaults\n    config = get_mail_config()\nutils/email_sender.py:19: in get_mail_config\n    MAIL_PORT=int(os.getenv(\"MAIL_PORT\", \"587\")),\nE   ValueError: invalid literal for int() with base 10: ''"
      }
    ]
  },
  {
    "timestamp": "2025-06-05T21:18:07.881992",
    "test_id": "20250605_211807",
    "test_name": "test_email_sender",
    "total_tests": 19,
    "passed": 19,
    "failed": 0,
    "errors": 0,
    "skipped": 0,
    "success_rate": 100.0,
    "execution_time": 1.111,
    "failed_tests": []
  },
  {
    "timestamp": "2025-06-05T21:19:03.775059",
    "test_id": "20250605_211903",
    "test_name": "test_integration",
    "total_tests": 0,
    "passed": 0,
    "failed": 0,
    "errors": 0,
    "skipped": 0,
    "success_rate": 0,
    "execution_time": 0.847,
    "failed_tests": []
  },
  {
    "timestamp": "2025-06-05T21:19:27.683050",
    "test_id": "20250605_211927",
    "test_name": "test_user_deletion_integration",
    "total_tests": 7,
    "passed": 1,
    "failed": 6,
    "errors": 0,
    "skipped": 0,
    "success_rate": 14.285714285714285,
    "execution_time": 2.044,
    "failed_tests": [
      {
        "name": "test_delete_account_success_with_auth",
        "classname": "tests.test_user_deletion_integration.TestDeleteUserAccountIntegration",
        "time": 0.025,
        "status": "failed",
        "failure_message": "assert 401 == 200\n +  where 401 = <Response [401 Unauthorized]>.status_code\n +  and   200 = status.HTTP_200_OK",
        "failure_text": "tests/test_user_deletion_integration.py:110: in test_delete_account_success_with_auth\n    assert response.status_code == status.HTTP_200_OK\nE   assert 401 == 200\nE    +  where 401 = <Response [401 Unauthorized]>.status_code\nE    +  and   200 = status.HTTP_200_OK"
      },
      {
        "name": "test_delete_account_unauthorized_different_email",
        "classname": "tests.test_user_deletion_integration.TestDeleteUserAccountIntegration",
        "time": 0.006,
        "status": "failed",
        "failure_message": "assert 401 == 403\n +  where 401 = <Response [401 Unauthorized]>.status_code\n +  and   403 = status.HTTP_403_FORBIDDEN",
        "failure_text": "tests/test_user_deletion_integration.py:136: in test_delete_account_unauthorized_different_email\n    assert response.status_code == status.HTTP_403_FORBIDDEN\nE   assert 401 == 403\nE    +  where 401 = <Response [401 Unauthorized]>.status_code\nE    +  and   403 = status.HTTP_403_FORBIDDEN"
      },
      {
        "name": "test_delete_account_password_mismatch",
        "classname": "tests.test_user_deletion_integration.TestDeleteUserAccountIntegration",
        "time": 0.007,
        "status": "failed",
        "failure_message": "assert 401 == 400\n +  where 401 = <Response [401 Unauthorized]>.status_code\n +  and   400 = status.HTTP_400_BAD_REQUEST",
        "failure_text": "tests/test_user_deletion_integration.py:156: in test_delete_account_password_mismatch\n    assert response.status_code == status.HTTP_400_BAD_REQUEST\nE   assert 401 == 400\nE    +  where 401 = <Response [401 Unauthorized]>.status_code\nE    +  and   400 = status.HTTP_400_BAD_REQUEST"
      },
      {
        "name": "test_delete_account_wrong_password",
        "classname": "tests.test_user_deletion_integration.TestDeleteUserAccountIntegration",
        "time": 0.01,
        "status": "failed",
        "failure_message": "AssertionError: assert '\\u30d1\\u30b9\\u30ef\\u30fc\\u30c9\\u304c\\u6b63\\u3057\\u304f\\u3042\\u308a\\u307e\\u305b\\u3093' in '\\u8a8d\\u8a3c\\u60c5\\u5831\\u304c\\u7121\\u52b9\\u3067\\u3059'",
        "failure_text": "tests/test_user_deletion_integration.py:179: in test_delete_account_wrong_password\n    assert \"パスワードが正しくありません\" in response.json()[\"detail\"]\nE   AssertionError: assert '\\u30d1\\u30b9\\u30ef\\u30fc\\u30c9\\u304c\\u6b63\\u3057\\u304f\\u3042\\u308a\\u307e\\u305b\\u3093' in '\\u8a8d\\u8a3c\\u60c5\\u5831\\u304c\\u7121\\u52b9\\u3067\\u3059'"
      },
      {
        "name": "test_delete_account_invalid_token",
        "classname": "tests.test_user_deletion_integration.TestDeleteUserAccountIntegration",
        "time": 0.009,
        "status": "failed",
        "failure_message": "AssertionError: assert 'Could not validate credentials' in '\\u8a8d\\u8a3c\\u60c5\\u5831\\u304c\\u7121\\u52b9\\u3067\\u3059'",
        "failure_text": "tests/test_user_deletion_integration.py:189: in test_delete_account_invalid_token\n    assert \"Could not validate credentials\" in response.json()[\"detail\"]\nE   AssertionError: assert 'Could not validate credentials' in '\\u8a8d\\u8a3c\\u60c5\\u5831\\u304c\\u7121\\u52b9\\u3067\\u3059'"
      },
      {
        "name": "test_delete_account_expired_token",
        "classname": "tests.test_user_deletion_integration.TestDeleteUserAccountIntegration",
        "time": 0.007,
        "status": "failed",
        "failure_message": "AssertionError: assert 'Could not validate credentials' in '\\u8a8d\\u8a3c\\u60c5\\u5831\\u304c\\u7121\\u52b9\\u3067\\u3059'",
        "failure_text": "tests/test_user_deletion_integration.py:207: in test_delete_account_expired_token\n    assert \"Could not validate credentials\" in response.json()[\"detail\"]\nE   AssertionError: assert 'Could not validate credentials' in '\\u8a8d\\u8a3c\\u60c5\\u5831\\u304c\\u7121\\u52b9\\u3067\\u3059'"
      }
    ]
  },
  {
    "timestamp": "2025-06-05T21:33:56.716514",
    "test_id": "20250605_213356",
    "test_name": "all_tests",
    "total_tests": 266,
    "passed": 266,
    "failed": 0,
    "errors": 0,
    "skipped": 0,
    "success_rate": 100.0,
    "execution_time": 3.054,
    "failed_tests": []
  }
]